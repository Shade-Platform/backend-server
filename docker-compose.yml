services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: shade_server
    environment:
      - DB_HOST=localhost
      - DB_PORT=3306
      - DB_USER=root
      - DB_PASSWORD=password
      - DB_NAME=mydb
    ports:
      - "8080:8080"
    depends_on:
      - shade_mysql
      - logstash
    volumes:
      - .:/app:Z
      - ./logs:/logs
      - .kube/config.local:/root/.kube/config:ro
      - ${HOME}/.minikube:/root/.minikube:ro
    # networks:
    #   - shade_network
    network_mode: host

  shade_mysql:
    image: mysql:8.0
    container_name: mysql_db
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: mydb
      MYSQL_PASSWORD: password
    volumes:
      - shade_mysql_data:/var/lib/mysql
      - mysql-keyring:/var/lib/mysql-keyring
      - ./infrastructure/mysql.cnf:/etc/mysql/conf.d/mysql.cnf:ro
    ports:
      - "3306:3306"
    # networks:
    #   - shade_network
    network_mode: host

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.13.4
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - esdata:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
    # networks:
      # - shade_network
    network_mode: host


  kibana:
    image: docker.elastic.co/kibana/kibana:8.13.4
    container_name: kibana
    ports:
      - "5601:5601"
    volumes:
      - ./infrastructure/kibana/kibana.yml:/usr/share/kibana/config/kibana.yml:ro
    depends_on:
      - elasticsearch
    # networks:
    #   - shade_network
    network_mode: host


  logstash:
    image: docker.elastic.co/logstash/logstash:8.13.4
    container_name: logstash
    volumes:
      - ./logstash/logstash.conf:/usr/share/logstash/pipeline/logstash.conf:ro
      - ./logs:/logs
    ports:
      - "5044:5044"
      - "5000:5000"
      - "9600:9600"
    depends_on:
      - elasticsearch
    # networks:
    #   - shade_network
    network_mode: host

volumes:
  shade_mysql_data:
  mysql-keyring:
  esdata:

# networks:
#   shade_network:
#     driver: bridge
